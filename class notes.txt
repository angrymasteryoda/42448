*********************************************************************************************************************************
********************************************************** 03/03/14 *************************************************************
*********************************************************************************************************************************
Mode = a set derived from another set which contains elements with a freq <= 2 and where freq is a max number

mode { 0,1,2 } = { null }
mode { 0,1,2,1 } = { 1 }
mode { 0,2,3,0,3 } = { 0 , 3 }
mode { 0,1,2,0,1,3 } = { 0, 3 }

1) steps sort the set
	{ 0, 0, 2, 3, 3 }
	   -2- -1- --2--
2) compare elements in set, with next element + count to fin max freq

3) another count to determine how many have max freq  #modes

4) create an array and fill with those that have max frequency

mode array = ma
ma[0] -> max freq
ma[1] -> # modes
ma[2] -> mode[1]
ma[3] -> mode[2]
ma[n+1 -> m[n-1]

*********************************************************************************************************************************
********************************************************** 03/05/14 *************************************************************
*********************************************************************************************************************************
123 = 100 + 20 + 3
 	base 10
10^2 10^1 10^0 = 1*10^2 + 2*10^1 + 3*10^0
123 = 1*8^2 + 2*8^1 + 3*8^0
	base 8
123 = 1*16^2 + 2*16^1 + 3*16^0
	base 16
123 = 1*2^2 + 2*2^1 + 3*2^0
	base 2
	
//TODO 	
ABC b16 -> __b10, __b8, __b2 
	10 * 256 + 11 * 16 + 12 * 1 = 2748
	
	
123 b10 -> __b16, __b8, __b2
	1111011 b2
	
765 b8 -> __b10, __b16, __b2

*********************************************************************************************************************************
********************************************************** 03/10/14 *************************************************************
*********************************************************************************************************************************

STL
	Vector -> dynamic array
	Set -> ordered array
	Map -> name value pair


*********************************************************************************************************************************
********************************************************** 03/12/14 *************************************************************
*********************************************************************************************************************************

123 % 2 = 1
int( 123/2 ) % 2 = 1
int( 61/2 ) % 2 = 0
int( 30/2 ) % 2 = 1
int( 15/2 ) % 2 = 1
int( 7/2 ) % 2 = 1
int( 3/2 ) % 2 = 1
reverse
1111011
64+32+16+8+3+2+1

DEC| BIN  | HEX
1  | 0001 | 1
2  | 0010 | 2
3  | 0011 | 3
4  | 0100 | 4
5  | 0101 | 5
6  | 0110 | 6
7  | 0111 | 7
8  | 1000 | 8
9  | 1001 | 9
10 | 1010 | A
11 | 1011 | B
12 | 1100 | C
13 | 1101 | D
14 | 1110 | E
15 | 1111 | F

FED ->  1111 1110 1101
	8	7755
	10	4077
		
777 ->	111 111 111
	16 	FF
	10	255

567 ->	1000110111
	8	1067
	16	237
		
new commit
