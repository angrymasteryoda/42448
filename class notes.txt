*********************************************************************************************************************************
********************************************************** 03/03/14 *************************************************************
*********************************************************************************************************************************
Mode = a set derived from another set which contains elements with a freq <= 2 and where freq is a max number

mode { 0,1,2 } = { null }
mode { 0,1,2,1 } = { 1 }
mode { 0,2,3,0,3 } = { 0 , 3 }
mode { 0,1,2,0,1,3 } = { 0, 3 }

1) steps sort the set
	{ 0, 0, 2, 3, 3 }
	   -2- -1- --2--
2) compare elements in set, with next element + count to fin max freq

3) another count to determine how many have max freq  #modes

4) create an array and fill with those that have max frequency

mode array = ma
ma[0] -> max freq
ma[1] -> # modes
ma[2] -> mode[1]
ma[3] -> mode[2]
ma[n+1 -> m[n-1]

*********************************************************************************************************************************
********************************************************** 03/05/14 *************************************************************
*********************************************************************************************************************************
123 = 100 + 20 + 3
 	base 10
10^2 10^1 10^0 = 1*10^2 + 2*10^1 + 3*10^0
123 = 1*8^2 + 2*8^1 + 3*8^0
	base 8
123 = 1*16^2 + 2*16^1 + 3*16^0
	base 16
123 = 1*2^2 + 2*2^1 + 3*2^0
	base 2
	
//TODO 	
ABC b16 -> __b10, __b8, __b2 
	10 * 256 + 11 * 16 + 12 * 1 = 2748
	
	
123 b10 -> __b16, __b8, __b2
	1111011 b2
	
765 b8 -> __b10, __b16, __b2








  
