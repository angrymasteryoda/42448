*********************************************************************************************************************************
********************************************************** 03/03/14 *************************************************************
*********************************************************************************************************************************
Mode = a set derived from another set which contains elements with a freq <= 2 and where freq is a max number

mode { 0,1,2 } = { null }
mode { 0,1,2,1 } = { 1 }
mode { 0,2,3,0,3 } = { 0 , 3 }
mode { 0,1,2,0,1,3 } = { 0, 3 }

1) steps sort the set
	{ 0, 0, 2, 3, 3 }
	   -2- -1- --2--
2) compare elements in set, with next element + count to fin max freq

3) another count to determine how many have max freq  #modes

4) create an array and fill with those that have max frequency

mode array = ma
ma[0] -> max freq
ma[1] -> # modes
ma[2] -> mode[1]
ma[3] -> mode[2]
ma[n+1 -> m[n-1]

*********************************************************************************************************************************
********************************************************** 03/05/14 *************************************************************
*********************************************************************************************************************************
123 = 100 + 20 + 3
 	base 10
10^2 10^1 10^0 = 1*10^2 + 2*10^1 + 3*10^0
123 = 1*8^2 + 2*8^1 + 3*8^0
	base 8
123 = 1*16^2 + 2*16^1 + 3*16^0
	base 16
123 = 1*2^2 + 2*2^1 + 3*2^0
	base 2
	
//TODO 	
ABC b16 -> __b10, __b8, __b2 
	10 * 256 + 11 * 16 + 12 * 1 = 2748
	
	
123 b10 -> __b16, __b8, __b2
	1111011 b2
	
765 b8 -> __b10, __b16, __b2

*********************************************************************************************************************************
********************************************************** 03/10/14 *************************************************************
*********************************************************************************************************************************

STL
	Vector -> dynamic array
	Set -> ordered array
	Map -> name value pair


*********************************************************************************************************************************
********************************************************** 03/12/14 *************************************************************
*********************************************************************************************************************************

123 % 2 = 1
int( 123/2 ) % 2 = 1
int( 61/2 ) % 2 = 0
int( 30/2 ) % 2 = 1
int( 15/2 ) % 2 = 1
int( 7/2 ) % 2 = 1
int( 3/2 ) % 2 = 1
reverse
1111011
64+32+16+8+3+2+1

O===============O
|DEC| BIN  | HEX|
|1  | 0001 | 1  |
|2  | 0010 | 2  |
|3  | 0011 | 3  |
|4  | 0100 | 4  |
|5  | 0101 | 5  |
|6  | 0110 | 6  |
|7  | 0111 | 7  |
|8  | 1000 | 8  |
|9  | 1001 | 9  |
|10 | 1010 | A  |
|11 | 1011 | B  |
|12 | 1100 | C  |
|13 | 1101 | D  |
|14 | 1110 | E  |
|15 | 1111 | F  |
O===============O

FED ->  1111 1110 1101
	8	7755
	10	4077
		
777 ->	111 111 111
	16 	FF
	10	255

567 ->	1000110111
	8	1067
	16	237
		
new commit

*********************************************************************************************************************************
********************************************************** 03/17/14 *************************************************************
*********************************************************************************************************************************
http://mathforum.org/library/drmath/view/55744.html

5.75
 b10
	16 -> 5.c
	2 ->  101 . 11
	8 -> 5.6
	
	
3.3
 b8
	16 -> 
	2 -> 11.011011
	10 -> 
	
F0.E
 b16
	10 ->  240.875
	2 -> 1111 0 . 111
	8 -> 36.7
	
	
	
	
1		2	.	7		3
10^1 	10^0	10^-1	10^-2
 
 
*********************************************************************************************************************************
********************************************************** 03/19/14 *************************************************************
*********************************************************************************************************************************

16.7
b8

ab.cd
b16

27.3
b10

*********************************************************************************************************************************
********************************************************** 03/24/14 *************************************************************
*********************************************************************************************************************************

13.9
 b10
	.9 * 16 = 14.4
	.4 * 16 = 6.4
	.4 * 16 = 6.4
	D.E6
	   -B16
	   
	   
    D		.E		6		6		6		6		6
	1101	1110	0110	0110	0110	0110	0110
	1101.11100
		  ----B2
	15.71463
		----B8
		  
 
7.6
 b10
 
	.6 * 16 = 9.6
	.6 * 16 = 9.6
	
	7.9
	  -B16
	
	7		.9		9		9		9		9		9		9
	0111	.1001	1001	1001	1001	1001	1001	1001
	0111.1001
		 ----B2
	7.46
	   -B8
 
1.1
 b10
 
	.1 * 16 =  1.6
	.6 * 16 = 9.6
	.6 * 16 = 9.6
	
	1		.1		9		9		9		9		9		9
	1		.0001	1001	1001	1001	1001	1001	1001
	1.00011
	   ----B2
	1.06314
	   ----B8
	   
*********************************************************************************************************************************
********************************************************** 04/2/14 *************************************************************
*********************************************************************************************************************************
float is 4 bytes
		32 bits
		
+			_ _ _ 			+			_ 
sign bit	fraction base	sign bit	power base

132 = .123 * 10^3
	  ---- fraction base
			    - power base
				
24 bits to the fraction base because 1 for sign so the range is ( 0 - ( 2^23 - 1 ) )

2^23 = 2^10 * 2^10 * 2^3
	  3sd     3sd    1sd		sd = signifciant digits
so a float can hold 7sd

49.76321 can be held in a float with ease

power byte is = +- 127

+- 127logb10 2 = x logb10 10 = +-127logb10 2 = 38

we want to convert 35.25 into floating point repersentiation
100011.01b2
.10001101 * 2^6
01000110 10000000 0000000 0000110
-------- -------- ------- -------
||     fraction base    | || power |
|                         |
sign bit                  sign bit


todo problems
122.875
	b10

	122 % 16 = 10
	122/2 % 16 = 7

7A.
	.875 * 16 = 14
7		A		.E
0111	1010	.1110
1111010.1110
.11110101110 * 2^7

01111010 11100000 00000000 00000111
-------- -------- -------- --------


1.1

	1.19-
		b16
		
		1.00011
		   ----
	    .100011 * 2^1

01000110 01100110 01100110 00000001
-------- -------- -------- --------

******** playing with convert ********
5.75

5.
	.75*16=12
5.C

0101.1010
.01011010 * 2^4

00101101 00000000 00000000 00000100
-------- -------- -------- --------

F0.E

1111 0 .1110
.111101110 * 2^5

01111011 10000000 00000000 00000101
-------- -------- -------- --------

******** end playing with convert ********

******** mid project idea war card game ********

O===============O
|DEC| BIN  | HEX|
|1  | 0001 | 1  |
|2  | 0010 | 2  |
|3  | 0011 | 3  |
|4  | 0100 | 4  |
|5  | 0101 | 5  |
|6  | 0110 | 6  |
|7  | 0111 | 7  |
|8  | 1000 | 8  |
|9  | 1001 | 9  |
|10 | 1010 | A  |
|11 | 1011 | B  |
|12 | 1100 | C  |
|13 | 1101 | D  |
|14 | 1110 | E  |
|15 | 1111 | F  |
O===============O

*********************************************************************************************************************************
********************************************************** 04/7/14 **************************************************************
*********************************************************************************************************************************

122  = 7A
  b10   b16
  
~( 01111010 )
   10000101
		 +1
   10000110
   2's complment 


0---- do these ----0   
| -1.3			   |
|	b10			   |
|				   |
| -0.0625		   |
|	b10			   |	
0------------------0


57 = 39
b10 -> b16

	11 1001 * 2^6
	
01110010 00000000 00000000 00000110
-------- -------- -------- --------

-57

01110010 00000000 00000000 00000110
-------- -------- -------- --------

1's complement
10001101 11111111 11111111 00000110
-------- -------- -------- --------
						+1
2's complement
10001110 00000000 00000000 00000110
-------- -------- -------- --------
8E       00       00       06 		


*********************************************************************************************************************************
********************************************************** 04/9/14 **************************************************************
*********************************************************************************************************************************

-1.3
.3*16 = 4.8
.8*16 = 12.8

1.4C
1.0100 1100 1100 1100
0.10100110011001100 * 10 ^ 1

01010011 00110011 00110011 00000001
-------- -------- -------- --------
10101100 11001100 11001100 00000001     1's complement
10101100 11001100 11001101 00000001     2's complement
ACCCCD01


0.0625
.0625 * 16 = 1.0

.1
01000000 00000000 00000000 00000000
-------- -------- -------- --------
10111111 11111111 11111111 00000000     1's complement
11000000 00000000 00000000 00000000     2's complement

c0000000
